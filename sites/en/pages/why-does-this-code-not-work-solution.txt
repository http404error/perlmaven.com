=title Why does this code not work? (split, array slice) - Solution
=timestamp 2018-02-27T11:30:01
=indexes split, warnings, strict
=status show
=author szabgab
=archive 1
=comments_disqus_enable 1

=abstract start

Earlier I've posted a problem asking <b>Why does this code not work</b>
using <a href="/why-does-this-code-not-work">split and array slices</a>.

Read that and try to solve it yourself before reading this.

Here is my solution:

=abstract end

Let's try the first script:

<include file="examples/split_on_the_fly.pl">

<code>
$ perl split_on_the_fly.pl
root

</code>

<h2>Always use strict and use warnings</h2>

As I've mentioned in other places, one should <a href="/strict">always use strict</a>
and <a href="/always-use-warnings">always use warnings</a> in Perl 5.

Adding them to this script will yield this code:

<include file="examples/split_on_the_fly_warnings.pl">

And this output:

<code>
$ perl split_on_the_fly_warnings.pl

Argument "0,4" isn't numeric in list slice at split_on_the_fly_warnings.pl line 7.
root
Use of uninitialized value $real_name in concatenation (.) or string at split_on_the_fly_warnings.pl line 9.
</code>

That in itself might not help with the exact solution, but at least it points in some direction.
We can read about the <a href="/argument-isnt-numeric-in-numeric">Argument ... isn't numeric in numeric ...</a> warning, the first in our output.

That and reading again the article about <a href="/perl-split">split</a> and about
<a href="/array-slices">array slicing</a> might lead us to the realization that instead
of a string in which we separate numbers by a comma, we need to use a list of numbers 
(which in the Perl syntax are separated by a comma) as the index in the array slice.

That's what we do in our solution. We replaced the <hl>$indexes</hl> scalar by
the <hl>@indexes</hl> array, and instead of the string <hl>"0,4"</hl> we
have the individual numbers <hl>(0, 4)</hl>.

<include file="examples/split_on_the_fly_fixed.pl">

Running the script looks like this:

<code>
$ perl split_on_the_fly_fixed.pl
root
System Administrator
</code>


<h2>Stand-alone Array slice</h2>

The second experiment, that as I assume was an attempt to simplify the code and find
a solution that way, had another issue.

I find it funny when that happens to me.
When I add some code to 'debug' the original problem and then I just add more bugs in the debugging code.
Anyway, this was the code:

<include file="examples/array_slice_not_working.pl">

<code>
$ perl array_slice_not_working.pl
root

</code>

Here too we start by adding <a href="/strict">use strict</a>
and <a href="/always-use-warnings">use warnings</a>.

<include file="examples/array_slice_strict.pl">

The result is more spectacular:

<code>
$ perl array_slice_strict.pl

Global symbol "$num" requires explicit package name (did you forget to declare "my $num"?) at array_slice_strict.pl line 7.
Global symbol "$num" requires explicit package name (did you forget to declare "my $num"?) at array_slice_strict.pl line 8.
Execution of array_slice_strict.pl aborted due to compilation errors.
</code>

The error <a href="/global-symbol-requires-explicit-package-name">Global symbol requires explicit package name</a> tells us that the variable <hl>$num</hl> has not been declared using <hl>my</hl>

We do that and run the script again:

<include file="examples/array_slice_warnings.pl">

This time we get the warnings that are already familiar from the previous attempt:

<code>
$ perl array_slice_warnings.pl
Scalar value @fields[...] better written as $fields[...] at array_slice_warnings.pl line 8.
Argument "0,4" isn't numeric in array slice at array_slice_warnings.pl line 8.
root
Use of uninitialized value $real_name in concatenation (.) or string at array_slice_warnings.pl line 11.
</code>

Instead of passing a string of numbers we need to pass a list of indexes. We can either create an array of indexes manually: 

<code lang="perl">
my @indexes = (0, 4);
</code>

Or, if we receive the indexes as a string, we can split that string into a list of numbers:

<code lang="perl">
my $num="0,4";
my @indexes = split /,/, $num;
</code>


<include file="examples/array_slice_fixed.pl">

Running this version will yield the expected answer:

<code>
$ perl array_slice_fixed.pl
root
System Administrator
</code>

<h2>Conclusion</h2>

<a href="/always-use-strict-and-use-warnings">Always use strict and use warnings in your perl code!</a>

