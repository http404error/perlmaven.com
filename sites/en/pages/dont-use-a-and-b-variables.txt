=title Don't use $a and $b outside of sort, not even for examples
=timestamp 2015-07-07T12:30:01
=indexes $a, $b
=status show
=books beginner
=author szabgab
=archive 1
=comments_disqus_enable 1

=abstract start

<hl>$a</hl> and <hl>$b</hl> are special variables used in
<a href="/search/$a">various forms</a> of <a href="/sorting-arrays-in-perl">sort</a>, in the <hl>reduce</hl> function
provided by <a href="https://metacpan.org/pod/List::Util">List::Util</a> and maybe in a few other places.

Because of that they are two variables that can be used without declaration even when <a href="https://perlmaven.com/strict">use strict</a>
is in effect.

=abstract end

While it might be cool that you use variables without declaration, but if that's what you want then just go without <hl>use strict;</hl>
and then don't be surprised that few people will be ready to help you fixing your code.

So assuming you want the effect of <hl>use strict</hl> that requires you to declare every variable before use, then you might notice
it won't require the declaration of <hl>$a</hl> or <hl>$b</hl>.

In other words, this code will work:

<code lang="perl">
use strict;
use warnings;

$a = 23;
$b = 19;
print $a+$b, "\n";   # 42
</code>

The problem is not really in the use of these variable outside of <hl>sort</hl> and the other special cases.
They won't be even changed by a call to <hl>sort</hl> as they are going to be localized for the duration of <hl>sort</hl> as you can see here:

<code lang="perl">
use strict;
use warnings;

$a = 23;
$b = 19;

print $a+$b, "\n";    # 42

my @numbers = sort {$a <=> $b } 1, 3, 2;
print "@numbers\n";  # 1 2 3 
print $a+$b, "\n";   # 42
</code>


It's just the confusion they might cause to someone who is not familiar with their special behavior,
and the bad example we provide to others.

Therefore a long time ago I've decided that I won't use <hl>$a</hl> or <hl>$b</hl> even in short snippets or sample code.
If I want to use short and meaningless variables names, there are plenty of other letters in the abc.

BTW Not using <hl>$a</hl> and <hl>$b</hl> is one of the suggestions if you'd like to
<a href="/how-to-improve-my-perl-program">improve your code</a>.


