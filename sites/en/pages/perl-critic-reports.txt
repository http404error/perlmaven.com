=title Perl Critic reports
=timestamp 2018-12-21T07:30:01
=indexes Perl::Critic
=status show
=author szabgab
=archive 1
=comments_disqus_enable 1

=abstract start
=abstract end


<h2>Code before strictures are enabled</h2>

Sample script generating this:

<include file="examples/critic/no_stricture.pl">

<a href="https://metacpan.org/pod/Perl::Critic::Policy::TestingAndDebugging::RequireUseStrict">TestingAndDebugging::RequireUseStrict</a>

Always have <b>use strict</b> at the beginning of your Perl files.

Related articles:
<ul>
  <li><a href="/strict">Always use strict!</a></li>
  <li><a href="/always-use-strict-and-use-warnings">Always use strict and use warnings in your perl code!</a></li>
  <li><a href="/use-strict-use-warnings-no-diagnostics">use strict; and warnings; but no diagnostics</a></li>
</ul>


<h2>Bareword file handle opened</h2>

<include file="examples/critic/bareword_file_handle.pl">

<a href="https://metacpan.org/pod/Perl::Critic::Policy::InputOutput::ProhibitBarewordFileHandles">InputOutput::ProhibitBarewordFileHandles</a>

<ul>
    <li><a href="/open-files-in-the-old-way">Don't Open Files in the old way</a></li>
    <li><a href="/barewords-in-perl">Barewords in Perl</a></li>
</ul>

<h2>Two-argument "open‚Äù used</h2>

<include file="examples/critic/two_argument_open.pl">

<a href="https://metacpan.org/pod/Perl::Critic::Policy::InputOutput::ProhibitTwoArgOpen">InputOutput::ProhibitTwoArgOpen</a>

<ul>
    <li><a href="/always-use-3-argument-open">Always use 3-argument open</a></li>
    <li><a href="/open-files-in-the-old-way">Don't Open Files in the old way</a></li>
</ul>

<h2>"return" statement with explicit "undef"</h2>

<include file="examples/critic/return_undef.pl">

<a href="https://metacpan.org/pod/Perl::Critic::Policy::Subroutines::ProhibitExplicitReturnUndef">Subroutines::ProhibitExplicitReturnUndef</a>

<ul>
    <li><a href="/how-to-return-undef-from-a-function">How to return nothing (or undef) from a function in Perl?</a></li>
    <li><a href="/wantarray">wantarray - returning list or scalar based on context</a></li>
</ul>

<h2>Nested named subroutine</h2>

<include file="examples/critic/nested_subs.pl">

<a href="https://metacpan.org/pod/Perl::Critic::Policy::Subroutines::ProhibitNestedSubs">Subroutines::ProhibitNestedSubs</a>

<h2>Package declaration must match filename</h2>

<h2>Three-argument form of open used .... Three-argument open is not available until perl 5.6.</h2>

<h2>Use of "open" is not allowed .....  Use file operation methods of MainObject instead.</h2>

<h2>I/O layer ":utf8" used ....  Use ":encoding(UTF-8)" to get strict validation.</h2>


