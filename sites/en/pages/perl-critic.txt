=title Perl Critic distributions and policies
=timestamp 2015-05-21T11:58:01
=indexes Perl::Critic
=status show
=author szabgab
=archive 1
=comments_disqus_enable 1
=show_related 0

=abstract start

<a href="http://perlcritic.com/">Perl::Critic</a> is configurable lint-like static analyzer for Perl that can provide recommendations how to improve your code and
can even locate code snippets that are sources of common errors. It has a base library that provides the engine and a large set of 
policies (things to be checked). In addition there are a number of distributions on CPAN that provide further policies. 

In this article we collect <b>all</b> the CPAN distributions related to Perl::Critic and all the policies available.

=abstract end

<h2>Articles</h2>

<ul>
  <li><a href="/getting-started-with-perl-critic">Getting Started with Perl::Critic (the linter for Perl)</a></li>
  <li><a href="/avoid-unwanted-bitwise-operators">Avoid (unwanted) bitwise operators</a> using <a href="https://metacpan.org/pod/Perl::Critic::Bangs">Perl::Critic::Bangs</a></li>
  <li><a href="/bare-here-documents-are-deprecated">Bare Here documents are deprecated - How to find offending code?</a> using the core <a href="https://metacpan.org/pod/Perl::Critic::Policy::ValuesAndExpressions::RequireQuotedHeredocTerminator">ValuesAndExpressions::RequireQuotedHeredocTerminator</a> policy.</li>
  <li><a href="/how-to-improve-my-perl-program">How to improve my Perl program?</a> - just use Perl::Critic</li>
  <li><a href="/perl-critic-one-policy">Improving your Perl code - one Perl::Critic policy at a time</a></li>
  <li><a href="/move-packages-to-their-own-files">Move packages to their own files - release Pod::Tree 1.21</a> part of the <a href="/becoming-a-co-maintainer">Refactoring and CPAN co-maintainer</a> series.</li>
  <li><a href="/type-checking-with-moo">Type checking with Moo</a> recommends the use of the <a href="https://metacpan.org/pod/Perl::Critic::Policy::ValuesAndExpressions::ProhibitAccessOfPrivateData">ValuesAndExpressions::ProhibitAccessOfPrivateData</a> policy from <a href="https://metacpan.org/pod/Perl::Critic::Nits">Perl::Critic::Nits</a>.</li>
  <li><a href="/private-member-data-shouldnt-be-accessed-directly">Private Member Data shouldn't be accessed directly - encapsulation violation</a></li>
  <li><a href="/require-explicit-importing-of-functions">Always require explicit importing of functions</a></li>
</ul>

<h2>Interviews</h2>

<ul>
  <li><a href="/jeffrey-thalhammer-perl-critic-and-pinto">Interview with Jeffrey Thalhammer, author of Perl::Critic and Pinto</a></li>
</ul>

<h2>Other Articles</h2>

<ul>
  <li><a href="http://www.slideshare.net/joshua.mcadams/an-introduction-to-perl-critic">An Introduction To Perl Critic</a> slides from 2007</li>
  <li><a href="http://perltraining.com.au/tips/2009-02-05.html">Automatically review your code</a></li>
  <li><a href="http://blogs.perl.org/users/ovid/2012/07/integrating-perlcritic-and-vim.html">Integrating perlcritic and vim</a></li>
  <li><a href="https://security.web.cern.ch/security/recommendations/en/codetools/perl_critic.shtml">Perl::Critic at CERN Computer Security Information</a></li>
  <li><a href="http://chimera.labs.oreilly.com/books/1234000001527/ch07.html">Cleaning Up Perl</a> (Chapter 7 of <a href="http://www.masteringperl.org/">Mastering Perl</a>)</li>
  <li><a href="http://devblog.nestoria.com/post/103804565528/module-of-the-month-november-2014-perl-critic">Module of the month November 2014</a></li>
  <li><a href="http://www.uponmyshoulder.com/blog/2012/format-perlcritic-output-as-tap-to-integrate-with-jenkins/">Format perlcritic output as TAP to integrate with Jenkins</a></li>
</ul>

<h2>Distributions</h2>

<table>
   <tr><th>Distribution</th><th>Abstract</th><th>Author</th><th>Date</th></tr>
[% FOR d IN distributions %]
   <tr><td><a href="https://metacpan.org/release/[% d.name %]">[% d.name %]</a></td>
       <td>[% d.abstract %]</td>
       <td><a href="https://metacpan.org/author/[% d.author %]">[% d.author %]</a></td>
       <td>[% d.date %]</td>
   </tr>
[% END %]
</table>


<h2>Policies</h2>

<table>
  <tr>
    <th>Name</th>
    <th>Severity</th>
    <th>Abstract</th>
  </tr>
  [% FOR p IN policies.keys.sort %]
    <tr>
      <td><a href="https://metacpan.org/pod/[% p %]">[% p.substr(22) %]</a></td>
      <td>[% policies.$p.level %]</td>
      <td>[% policies.$p.abstract %]</td>
    </tr>
  [% END %]
</table>

<h2>Examples</h2>

<ul>
  <li><a href="">BuiltinFunctions::ProhibitBooleanGrep</a></li>
</ul>

